package UI;

import Logica.Simular;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lucho
 */
public class Principal extends javax.swing.JFrame {

    private static final String ALTERNATIVA_A = "Alternativa A";
    private static final String ALTERNATIVA_B = "Alternativa B";

    private Object[] filaAnterior = new Object[14];
    private Object[] filaNueva = new Object[14];
    private Integer dia;

    public final Integer[] probTipos = new Integer[2];

    public Principal() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_Simular = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        totalSemana = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        desdeDia = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        hastaDia = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        demoraDesde = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        demoraHasta = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        descartar2 = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        probabilidades = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        utilidad = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        utilidadSin2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        principal = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btn_Simular.setText("Simular");
        btn_Simular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SimularActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Imprenta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Total Semanas:");

        totalSemana.setText("100");
        totalSemana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalSemanaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Desde Día:");

        desdeDia.setText("0");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Hasta Día:");

        hastaDia.setText("100");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(49, 49, 49)
                        .addComponent(hastaDia, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(desdeDia, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(totalSemana, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(totalSemana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(desdeDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(hastaDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Variables Sistema", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Demora Trabajo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        demoraDesde.setText("2");
        demoraDesde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                demoraDesdeActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Desde (dias)");

        demoraHasta.setText("5");
        demoraHasta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                demoraHastaActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Hasta (dias)");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(demoraHasta)
                    .addComponent(demoraDesde, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(demoraDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(demoraHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        descartar2.setText("Descartar Tipo 2");
        descartar2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                descartar2StateChanged(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tipos Trabajo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        probabilidades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"TIPO 1", "0.5", "0", "49", "400"},
                {"TIPO 2", "0.2", "50", "69", "200"},
                {"NO TRABAJO", "0.3", "70", "99", "-"}
            },
            new String [] {
                "Tipo", "Probabilidad", "Desde", "Hasta", "Utilidad ($)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(probabilidades);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 19, Short.MAX_VALUE)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(descartar2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(descartar2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(88, 88, 88))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Salidas Sistema", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N

        utilidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utilidadActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Utilidad obtenida ($) :");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Utilidad obtenida s/tipo 2 ($) :");

        utilidadSin2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utilidadSin2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(19, 19, 19)
                        .addComponent(utilidadSin2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(utilidad)))
                .addContainerGap(163, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(utilidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(utilidadSin2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
        );

        principal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dia (cantidad)", "Evento", "RND Tipo", "Tipo Trabajo", "RND Demora", "Dia Demora", "Dia Finaliza", "Prensa [1]", "Estado [1]", "Prensa [2]", "Estado [2]", "Acum Tipo 1", "Acum Tipo 2", "Acum ($)"
            }
        ));
        principal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                principalMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(principal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_Simular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btn_Simular))
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_SimularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SimularActionPerformed
        this.dia = 0;
        Integer totalDias = Integer.parseInt(this.totalSemana.getText()) * 7;
        Integer desde = Integer.parseInt(this.desdeDia.getText());
        Integer hasta = Integer.parseInt(this.hastaDia.getText());
        Double utilidad1 = Double.parseDouble(this.probabilidades.getValueAt(0, 4).toString());
        Double utilidad2 = Double.parseDouble(this.probabilidades.getValueAt(1, 4).toString());
        llenarProbabilidades();
        inicializarFila();

        Simular simular = new Simular(utilidad1,utilidad2);

        DefaultTableModel modelo = new DefaultTableModel();
        modelo = (DefaultTableModel) this.principal.getModel();
        modelo.setRowCount(0);

        while (this.dia <= totalDias) {
            this.filaNueva = simular.simular(this.filaAnterior);

            if (this.dia >= desde && this.dia <= hasta) {
                modelo.addRow(this.filaNueva);
            }
            setearFilaAnterior(this.filaAnterior, this.filaNueva);
            this.dia++;
        }

        this.utilidad.setText("");
        this.utilidadSin2.setText("");
        if (this.descartar2.isSelected()) {
            this.utilidadSin2.setText(((Integer) this.filaNueva[13]).toString());
        } else {
            this.utilidad.setText(((Integer) this.filaNueva[13]).toString());
        }

//        if (this.cb_alternativas.getSelectedItem().equals(Principal.ALTERNATIVA_A)) {
//            simularAlternativaA(mediaPoissonLlegada, mediaExpLlenarForm,
//                    unifAtencionA, unifAtencionB, tiempoSimular, desde, hasta);
//        } else {
//            simularAlternativaB(mediaPoissonLlegada, mediaExpAtencionB, tiempoSimular,
//                    desde, hasta);
//        }

    }//GEN-LAST:event_btn_SimularActionPerformed

    private void utilidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utilidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_utilidadActionPerformed

    private void totalSemanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalSemanaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalSemanaActionPerformed

    private void utilidadSin2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utilidadSin2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_utilidadSin2ActionPerformed

    private void principalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_principalMouseClicked


    }//GEN-LAST:event_principalMouseClicked

    private void demoraDesdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_demoraDesdeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_demoraDesdeActionPerformed

    private void demoraHastaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_demoraHastaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_demoraHastaActionPerformed

    private void descartar2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_descartar2StateChanged

        if (this.descartar2.isSelected()) {
            this.probabilidades.setValueAt(0, 1, 1);
            this.probabilidades.setValueAt(0, 1, 2);
            this.probabilidades.setValueAt(0, 1, 3);
            this.probabilidades.setValueAt(0, 1, 4);
        }


    }//GEN-LAST:event_descartar2StateChanged

    private void inicializarFila() {
        this.filaAnterior[0] = 0; // dia
        this.filaAnterior[1] = "-"; //Evento
        this.filaAnterior[2] = "-"; //RND Tipo
        this.filaAnterior[3] = "-";//Tipo Trabajo
        this.filaAnterior[4] = "-"; //RND Demora
        this.filaAnterior[5] = "-"; // Dia Demora
        this.filaAnterior[6] = "-"; // Dia Finaliza
        this.filaAnterior[7] = "-"; // Prensa 1
        this.filaAnterior[8] = "LIBRE"; //Estado
        this.filaAnterior[9] = "-";//Fin Atencion;
        this.filaAnterior[10] = "LIBRE"; // Estado
        this.filaAnterior[11] = 0;//Fin Atencion;
        this.filaAnterior[12] = 0; // Estado
        this.filaAnterior[13] = 0.0f;//Fin Atencion;

    }

    private void setearFilaAnterior(Object[] filaAnterior, Object[] filaNueva) {
        for (int i = 0; i < filaAnterior.length; i++) {
            filaAnterior[i] = filaNueva[i];
        }
    }

//    private void crearColumnasClientesA(SimularA simular, DefaultTableModel modelo2) {
//
//        modelo2 = (DefaultTableModel) this.tb_solicitantesA.getModel();
//        Integer cantidad = simular.obtenerSolicitantes().size();
//        for (int i = 0; i < cantidad; i++) {
//            if (!estaClienteEnColumna(modelo2, simular.obtenerSolicitantes().get(i))) {
//                Integer n = simular.obtenerSolicitantes().get(i).getNumero();
//                modelo2.addColumn("Estado [" + n + "]");
//                modelo2.addColumn("Hora Llegada [" + n + "]");
//                modelo2.addColumn("Hora Salida [" + n + "]");
//            }
//
//        }
//        this.tb_solicitantesA.setModel(modelo2);
    //}

//    private boolean estaClienteEnColumna(DefaultTableModel modelo2, Solicitante solicitante) {
//        for (int i = 1; i < modelo2.getColumnCount(); i += 3) {
//            String nombreColumna = modelo2.getColumnName(i);
//            Integer nroSolicitante = obtenerNumeroSolicitanteColumna(nombreColumna);
//            if (solicitante.getNumero().equals(nroSolicitante)) {
//                return true;
//            }
//
//        }
//        return false;
//    }
//
//    private void llenarFilaSolicitantesA(SimularA simular, DefaultTableModel modelo2) {
//        ArrayList<Solicitante> solicitantes = simular.obtenerSolicitantes();
//        modelo2 = (DefaultTableModel) this.tb_solicitantesA.getModel();
//        Object[] filaClientes = new Object[modelo2.getColumnCount()];
//        filaClientes[0] = this.reloj;
//        for (int i = 1; i < modelo2.getColumnCount(); i += 3) {
//            String nombreColumna = modelo2.getColumnName(i);
//            Integer numeroCliente = obtenerNumeroSolicitanteColumna(nombreColumna);
//            for (int j = 0; j < solicitantes.size(); j++) {
//                if (solicitantes.get(j).getNumero().equals(numeroCliente)) {
//                    filaClientes[i] = solicitantes.get(j).getEstado();
//                    filaClientes[i + 1] = solicitantes.get(j).getHoraLlegada();
//                    if (solicitantes.get(j).getEstado().equals(Estado.FUERA_SISTEMA)) {
//                        filaClientes[i + 2] = solicitantes.get(j).getHoraSalida();
//                    }
//                }
//            }
//        }
//        modelo2.addRow(filaClientes);
//        this.tb_solicitantesA.setModel(modelo2);
//    }
//
//    private Integer obtenerNumeroSolicitanteColumna(String nombreColumna) {
//        String numero = "";
//        for (int i = 0; i < nombreColumna.length(); i++) {
//            if (Character.isDigit(nombreColumna.charAt(i))) {
//                numero = numero.concat(nombreColumna.substring(i, i + 1));
//            }
//        }
//        return Integer.parseInt(numero);
//    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Simular;
    private javax.swing.JTextField demoraDesde;
    private javax.swing.JTextField demoraHasta;
    private javax.swing.JCheckBox descartar2;
    private javax.swing.JTextField desdeDia;
    private javax.swing.JTextField hastaDia;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JTable principal;
    private javax.swing.JTable probabilidades;
    private javax.swing.JTextField totalSemana;
    private javax.swing.JTextField utilidad;
    private javax.swing.JTextField utilidadSin2;
    // End of variables declaration//GEN-END:variables

//    private void simularAlternativaA(Double mediaPoissonLlegada, Double mediaExpLlenarForm,
//            Integer unifAtencionA, Integer unifAtencionB, Double tiempoSimular, Float desde, Float hasta) {
//        this.inicioA.setText(new SimpleDateFormat("HH:mm:ss").format(new Date()));
//
//        this.finA.setText(new SimpleDateFormat("HH:mm:ss").format(new Date()));
//
//    }
//
//    private void simularAlternativaB(Double mediaPoissonLlegada, Double mediaAtencion,
//            Double tiempoSimular, Float desde, Float hasta) {
//
//        this.inicioB.setText(new SimpleDateFormat("HH:mm:ss").format(new Date()));
//
//        SimularB simular = new SimularB(mediaPoissonLlegada, mediaAtencion);
//        inicializarFilaB();
//
//        DefaultTableModel modelo = new DefaultTableModel();
//        modelo = (DefaultTableModel) this.principalB.getModel();
//        modelo.setRowCount(0);
//        DefaultTableModel modeloCliente = new DefaultTableModel();
//        modeloCliente = (DefaultTableModel) this.tb_solicitantesB.getModel();
//        modeloCliente.setRowCount(0);
//        modeloCliente.setColumnCount(1);
//        modelo.addRow(this.filaAnteriorB);
//        while (this.reloj <= tiempoSimular) {
//            this.filaNuevaB = simular.simularB(this.filaAnteriorB);
//            this.reloj = (Float) this.filaNuevaB[0];
//
//            if (this.reloj >= desde && this.reloj <= hasta) {
//                modelo.addRow(this.filaNuevaB);
//                crearColumnasClientesB(simular, modeloCliente);
//                llenarFilaSolicitantesB(simular, modeloCliente);
//            }
//
//            setearFilaAnterior(this.filaAnteriorB, this.filaNuevaB);
//        }
//
//        this.tx_atendidosB.setText(((Integer) this.filaNuevaB[15]).toString());
//        this.tx_promedioB.setText("" + ((Float) this.filaNuevaB[16] / (Integer) this.filaNuevaB[15]));
//
//        this.finB.setText(new SimpleDateFormat("HH:mm:ss").format(new Date()));
//    }
//
//    private void crearColumnasClientesB(SimularB simular, DefaultTableModel modelo2) {
//
//        modelo2 = (DefaultTableModel) this.tb_solicitantesB.getModel();
//        Integer cantidad = simular.obtenerSolicitantes().size();
//        for (int i = 0; i < cantidad; i++) {
//            if (!estaClienteEnColumna(modelo2, simular.obtenerSolicitantes().get(i))) {
//                Integer n = simular.obtenerSolicitantes().get(i).getNumero();
//                modelo2.addColumn("Estado [" + n + "]");
//                modelo2.addColumn("Hora Llegada [" + n + "]");
//                modelo2.addColumn("Hora Salida [" + n + "]");
//            }
//
//        }
//        this.tb_solicitantesB.setModel(modelo2);
//    }
//
//    private void llenarFilaSolicitantesB(SimularB simular, DefaultTableModel modelo2) {
//        ArrayList<Solicitante> solicitantes = simular.obtenerSolicitantes();
//        modelo2 = (DefaultTableModel) this.tb_solicitantesB.getModel();
//        Object[] filaClientes = new Object[modelo2.getColumnCount()];
//        filaClientes[0] = this.reloj;
//        for (int i = 1; i < modelo2.getColumnCount(); i += 3) {
//            String nombreColumna = modelo2.getColumnName(i);
//            Integer numeroCliente = obtenerNumeroSolicitanteColumna(nombreColumna);
//            for (int j = 0; j < solicitantes.size(); j++) {
//                if (solicitantes.get(j).getNumero().equals(numeroCliente)) {
//                    filaClientes[i] = solicitantes.get(j).getEstado();
//                    filaClientes[i + 1] = solicitantes.get(j).getHoraLlegada();
//                    if (solicitantes.get(j).getEstado().equals(Estado.FUERA_SISTEMA)) {
//                        filaClientes[i + 2] = solicitantes.get(j).getHoraSalida();
//                    }
//                }
//            }
//        }
//        modelo2.addRow(filaClientes);
//        this.tb_solicitantesB.setModel(modelo2);
//    }

    private void llenarProbabilidades() {
        this.probTipos[0] = Integer.parseInt(this.probabilidades.getValueAt(0, 3).toString());
        if (!this.descartar2.isSelected()) {
            this.probTipos[1] = Integer.parseInt(this.probabilidades.getValueAt(1, 3).toString());
        }

    }
}
